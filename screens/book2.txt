import {
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
  Modal,
  Image,
  ScrollView,
  TextInput,
  FlatList,
} from "react-native";
import React, { useState,useEffect } from "react";
import { useRoute } from "@react-navigation/native";
import {
  MaterialCommunityIcons,
  Entypo,
  Icon,
  FontAwesome,
  MaterialIcons,
} from "@expo/vector-icons";
import { windowWidth, windowHeight } from "../utils/Dimensions";
import Seats from "../components/Seats";
import { width } from "deprecated-react-native-prop-types/DeprecatedImagePropType";
import { db } from "../firebase";

const BookingPage = ({ navigation }) => {
  const route = useRoute();

  let amount = route.params?.Amount;
  const destination = route.params?.destination;
  const title = route.params?.title;
  const trip = `${title} to ${destination}`;

  const [modalOpen, setModalOpen] = useState(false);
  const [phone, setPhone] = useState();

  const makePayment = async () => {
    
     await handleBookNowPress()
    .then(()=>{
       fetch("https://cyan-difficult-catfish.cyclic.app/token", {
      method: "POST",
      body: JSON.stringify({
        phone: phone,
        amount: amount,
      }),
      headers: {
        "Content-Type": "application/json",
      },
    }).catch((error) => {
      console.log(error.message);
    });
    }
      
    )
          // getAllSeats();
   
      
    
    
  
  };

  const SEAT_STATES = {
    EMPTY: "empty",
    BOOKED: "booked",
  };

  const [seats, setSeats] = useState([]);
  const [selectedSeat, setSelectedSeat] = useState(null);

  useEffect(() => {
    // Load seats data from Firebase
    db.collection(trip).onSnapshot((snapshot) => {
      const data = snapshot.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
      }));
      setSeats(data);
    });
  }, []);

  const handleSeatPress = (seat) => {
    if (seat.state === SEAT_STATES.BOOKED) {
      alert("This seat is already booked!");
      return;
    }
    setSelectedSeat(seat);
  };

  const handleBookNowPress = () => {
    if (selectedSeat === null) {
      alert("Please select a seat first!");
      return;
    }
    // Update the seat state in Firebase
    db.collection(trip).doc(selectedSeat.id).update({
      state: SEAT_STATES.BOOKED,
    });
    setSelectedSeat(null);
    alert("Seat booked successfully!");
  };

  let selectedSeats = [];

  const getAllSeats = () => {
    seats.map((item) => {
      if (item.selected == true) {
        selectedSeats.push(1);
      }
    });
    row2.map((item) => {
      if (item.selected == true) {
        selectedSeats.push(1);
      }
    });

    amount = amount * selectedSeats.length;
  };

  return (
    <>
      <View
        style={{
          flex: 1,
          justifyContent: "center",
          alignItems: "center",
          marginTop: "20%",
          margin: "10%",
        }}
      >
        <Text>{trip}</Text>
        <View
          style={{
            width: "100%",
            height: "100%",
            borderWidth: 3,
            borderColor: "#a4133c",
            borderRadius: 28,
          }}
        >
          <Image
            source={require("../assets/icons8-steering-64.png")}
            style={{ height: 32, width: 32, alignSelf: "flex-end", margin: 10 }}
          />

          <View
            style={{
              flexDirection: "row",
              justifyContent: "space-between",
              alignItems: "center",
            }}
          >
            <View style={styles.container}>
              
              <View style={styles.seatContainer}>
                {seats.map((seat) => (
                  <TouchableOpacity
                    key={seat.id}
                    style={[
                      styles.seat,
                      {
                        backgroundColor:
                          seat.state === SEAT_STATES.EMPTY ? "#fff" : "#ccc",
                      },
                    ]}
                    onPress={() => handleSeatPress(seat)}
                  >
                    <Text style={styles.seatNumber}>{seat.number}</Text>
                  </TouchableOpacity>
                ))}
              </View>
              
            </View>
          </View>
        </View>
      </View>

      <TouchableOpacity
        onPress={() => {
          setModalOpen(true);
          
        }}
      >
        <View style={styles.bookButton}>
          <Text style={{ color: "#495057", fontWeight: "bold", fontSize: 18 }}>
            Book Now
          </Text>
        </View>
      </TouchableOpacity>
      <Modal visible={modalOpen}>
        <View>
          <View style={{ flexDirection: "row", alignContent: "flex-end" }}>
            <TouchableOpacity onPress={() => setModalOpen(false)}>
              <MaterialIcons name="close" size={32} />
            </TouchableOpacity>
          </View>
          <View style={{ marginHorizontal: "20%" }}>
            <Image
              source={require("../assets/M-PESA_LOGO-01.png")}
              style={{ width: 200, resizeMode: "contain" }}
            />
          </View>
          <View>
            <View style={styles.inputField}>
              <TextInput
                placeholder="Enter Phone number"
                style={{ flexGrow: 1 }}
                keyboardType="numeric"
                value={phone}
                onChangeText={(phone) => setPhone(phone)}
              />
            </View>
          </View>
          <TouchableOpacity onPress={() => makePayment() }>
            <View style={styles.bookButton}>
              <Text
                style={{ color: "#495057", fontWeight: "bold", fontSize: 18 }}
              >
                PAY
              </Text>
            </View>
          </TouchableOpacity>
        </View>
      </Modal>
    </>
  );
};

export default BookingPage;

const styles = StyleSheet.create({
  busView: {
    padding: 28,
    marginHorizontal: 30,
    marginTop: "30%",
    borderWidth: 3,
    borderColor: "#a4133c",
    borderRadius: 28,
  },
  bookButton: {
    padding: 8,
    alignItems: "center",
    backgroundColor: "#fff",
    borderColor: "#ce4257",
    borderWidth: 4,
    borderRadius: 10,
    width: windowWidth - 80,
    marginHorizontal: 30,
    marginTop: 40,
  },
  inputField: {
    flexDirection: "row",
    alignItems: "center",
    borderBottomColor: "#ccc",
    borderBottomWidth: 2,
    paddingBottom: 6,
    marginBottom: 25,
    marginHorizontal: "15%",
    marginVertical: "15%",
  },
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  seatContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'center',
  },
  seat: {
    width: 50,
    height: 50,
    borderRadius: 25,
    justifyContent: 'center',
    alignItems: 'center',
    margin: 10,
  },
  seatNumber: {
    fontSize: 16,
  },
  bookNowButton: {
    backgroundColor: '#0080ff',
    padding: 10,
    borderRadius: 5,
    marginTop: 20,
  },
  bookNowButtonText: {
    color: '#fff',
    fontSize: 18,
    fontWeight: 'bold',
  },
});
